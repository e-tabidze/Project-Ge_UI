{"ast":null,"code":"import http from \"./httpService\"; // DATA\n\nimport config from \"config\";\nexport function getJewels() {\n  return http.get(`${config.apiUrl}/jewels/`).then(res => {\n    return res.data;\n  });\n}\nexport function getJewel(id) {\n  return http.put(`${config.apiUrl}/jewels/jewel`, {\n    id: id\n  }).then(res => {\n    return res.data;\n  });\n}\nexport function getUserJewels(userId) {\n  return http.post(`${config.apiUrl}/users/jewels`, {\n    userId\n  });\n}\nexport function getSimilarJewels(type) {\n  return http.post(`${config.apiUrl}/jewels/similar`, {\n    type: type\n  }).then(res => {\n    return res.data;\n  });\n}\nexport function getStones() {\n  return http.get(`${config.apiUrl}/stones/`).then(res => {\n    return res.data;\n  });\n}\nexport function getMetals() {\n  return http.get(`${config.apiUrl}/metals/`).then(res => {\n    return res.data;\n  });\n}\nexport function getPieces() {\n  return http.get(`${config.apiUrl}/pieces/`).then(res => {\n    return res.data;\n  });\n}\nexport function postJewels(newJewel, userToken) {\n  return http.post(`${config.apiUrl}/jewels/add`, newJewel, {\n    headers: {\n      \"x-auth-token\": userToken,\n      action: \"/multiple-upload\",\n      enctype: \"multipart/form-data\",\n      \"Content-type\": \"application/json\"\n    }\n  }).then(res => {\n    return res.data;\n  });\n}\nexport async function editJewel(updatedJewel, jewelId, userToken) {\n  return await http.post(`${config.apiUrl}/jewels/update/${jewelId}`, updatedJewel, {\n    headers: {\n      \"x-auth-token\": userToken,\n      action: \"/multiple-upload\",\n      enctype: \"multipart/form-data\",\n      \"Content-type\": \"application/json\"\n    }\n  }).then(async res => {\n    return await res.data;\n  });\n}\nexport function deleteJewel(jewelId, userToken) {\n  return http.delete(`${config.apiUrl}/jewels/delete/${jewelId}`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  }).then(res => {\n    return res.data;\n  });\n} // USER\n\nexport function registerUser(user) {\n  return http.post(`${config.apiUrl}/users/`, user).then(res => {\n    return res;\n  });\n}\nexport function loginUser(email, password) {\n  return http.post(`${config.apiUrl}/auth/`, {\n    email,\n    password\n  });\n}\nexport function forgotPassword(email) {\n  return http.post(`${config.apiUrl}/password-reset`, {\n    email\n  }).then(res => {\n    return res.data;\n  });\n}\nexport function changePassword(userId, userToken, password) {\n  return http.post(`${config.apiUrl}/password-reset/${userId}/${userToken}`, {\n    password\n  }).then(res => {\n    return res;\n  });\n}\nexport function addUserFavProduct(userId, jewelId) {\n  http.get(`${config.apiUrl}/users/add/${userId}/${jewelId}`).then(res => {\n    return res.data;\n  });\n}\nexport function removeUserFavProduct(userId, jewelId) {\n  http.get(`${config.apiUrl}/users/remove/${userId}/${jewelId}`).then(res => {\n    return res.data;\n  });\n}\nexport function getUserFavorites(userId) {\n  return http.get(`${config.apiUrl}/users/${userId}`).then(res => {\n    return res.data;\n  });\n}","map":{"version":3,"sources":["/home/e_tabidze/Documents/Project-Ge/project-ge-ui/src/Services/ApiEndpoints.js"],"names":["http","config","getJewels","get","apiUrl","then","res","data","getJewel","id","put","getUserJewels","userId","post","getSimilarJewels","type","getStones","getMetals","getPieces","postJewels","newJewel","userToken","headers","action","enctype","editJewel","updatedJewel","jewelId","deleteJewel","delete","registerUser","user","loginUser","email","password","forgotPassword","changePassword","addUserFavProduct","removeUserFavProduct","getUserFavorites"],"mappings":"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","sourcesContent":["import http from \"./httpService\";\n\n// DATA\nimport config from \"config\";\n\nexport function getJewels() {\n  return http.get(`${config.apiUrl}/jewels/`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function getJewel(id) {\n  return http.put(`${config.apiUrl}/jewels/jewel`, { id: id }).then((res) => {\n    return res.data;\n  });\n}\n\nexport function getUserJewels(userId) {\n  return http.post(`${config.apiUrl}/users/jewels`, { userId });\n}\n\nexport function getSimilarJewels(type) {\n  return http.post(`${config.apiUrl}/jewels/similar`, { type: type }).then((res) => {\n    return res.data;\n  });\n}\n\nexport function getStones() {\n  return http.get(`${config.apiUrl}/stones/`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function getMetals() {\n  return http.get(`${config.apiUrl}/metals/`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function getPieces() {\n  return http.get(`${config.apiUrl}/pieces/`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function postJewels(newJewel, userToken) {\n  return http\n    .post(`${config.apiUrl}/jewels/add`, newJewel, {\n      headers: {\n        \"x-auth-token\": userToken,\n        action: \"/multiple-upload\",\n        enctype: \"multipart/form-data\",\n        \"Content-type\": \"application/json\",\n      },\n    })\n    .then((res) => {\n      return res.data;\n    });\n}\n\nexport async function editJewel(updatedJewel, jewelId, userToken) {\n  return await http\n    .post(`${config.apiUrl}/jewels/update/${jewelId}`, updatedJewel, {\n      headers: {\n        \"x-auth-token\": userToken,\n        action: \"/multiple-upload\",\n        enctype: \"multipart/form-data\",\n        \"Content-type\": \"application/json\",\n      },\n    })\n    .then(async (res) => {\n      return await res.data;\n    });\n}\n\nexport function deleteJewel(jewelId, userToken) {\n  return http\n    .delete(`${config.apiUrl}/jewels/delete/${jewelId}`, {\n      headers: {\n        \"x-auth-token\": userToken,\n      },\n    })\n    .then((res) => {\n      return res.data;\n    });\n}\n\n// USER\n\nexport function registerUser(user) {\n  return http.post(`${config.apiUrl}/users/`, user).then((res) => {\n    return res;\n  });\n}\n\nexport function loginUser(email, password) {\n  return http.post(`${config.apiUrl}/auth/`, { email, password });\n}\n\nexport function forgotPassword(email) {\n  return http.post(`${config.apiUrl}/password-reset`, { email }).then((res) => {\n    return res.data;\n  });\n}\n\nexport function changePassword(userId, userToken, password) {\n  return http\n    .post(`${config.apiUrl}/password-reset/${userId}/${userToken}`, {\n      password,\n    })\n    .then((res) => {\n      return res;\n    });\n}\n\nexport function addUserFavProduct(userId, jewelId) {\n  http.get(`${config.apiUrl}/users/add/${userId}/${jewelId}`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function removeUserFavProduct(userId, jewelId) {\n  http.get(`${config.apiUrl}/users/remove/${userId}/${jewelId}`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function getUserFavorites(userId) {\n  return http.get(`${config.apiUrl}/users/${userId}`).then((res) => {\n    return res.data;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}