{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { getJewel } from \"../Services/ApiEndpoints\";\nimport { useLocation } from \"react-router-dom\";\n\nconst useJewel = () => {\n  _s();\n\n  const [jewel, setJewel] = useState(null);\n  const location = useLocation();\n\n  const handleGetJewel = async () => {\n    let jewelId = window.location.pathname.split(\"/\")[2];\n    let jewelData = await getJewel(jewelId);\n    setJewel(jewelData);\n  };\n\n  useEffect(() => {\n    handleGetJewel();\n    return () => {\n      setJewel(null);\n    };\n  }, [location.pathname]);\n  return {\n    jewel,\n    setJewel,\n    handleGetJewel\n  };\n};\n\n_s(useJewel, \"H7ab/F8jPl9U+eyMmN2QHQBimY0=\", false, function () {\n  return [useLocation];\n});\n\nexport default useJewel;","map":{"version":3,"sources":["/home/e_tabidze/Documents/Project-Ge/project-ge-ui/src/Helpers/useJewel.js"],"names":["useState","useEffect","getJewel","useLocation","useJewel","jewel","setJewel","location","handleGetJewel","jewelId","window","pathname","split","jewelData"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMO,QAAQ,GAAGJ,WAAW,EAA5B;;AAEA,QAAMK,cAAc,GAAG,YAAY;AACjC,QAAIC,OAAO,GAAGC,MAAM,CAACH,QAAP,CAAgBI,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAd;AACA,QAAIC,SAAS,GAAG,MAAMX,QAAQ,CAACO,OAAD,CAA9B;AACAH,IAAAA,QAAQ,CAACO,SAAD,CAAR;AACD,GAJD;;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,cAAc;AACd,WAAO,MAAM;AACXF,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFD;AAGD,GALQ,EAKN,CAACC,QAAQ,CAACI,QAAV,CALM,CAAT;AAOA,SAAO;AAAEN,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CAlBD;;GAAMJ,Q;UAEaD,W;;;AAkBnB,eAAeC,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getJewel } from \"../Services/ApiEndpoints\";\nimport { useLocation } from \"react-router-dom\";\n\nconst useJewel = () => {\n  const [jewel, setJewel] = useState(null);\n  const location = useLocation();\n\n  const handleGetJewel = async () => {\n    let jewelId = window.location.pathname.split(\"/\")[2];\n    let jewelData = await getJewel(jewelId);\n    setJewel(jewelData);\n  };\n\n  useEffect(() => {\n    handleGetJewel();\n    return () => {\n      setJewel(null);\n    };\n  }, [location.pathname]);\n\n  return { jewel, setJewel, handleGetJewel };\n};\n\nexport default useJewel;\n"]},"metadata":{},"sourceType":"module"}