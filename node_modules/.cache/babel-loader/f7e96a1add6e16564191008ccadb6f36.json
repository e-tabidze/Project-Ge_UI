{"ast":null,"code":"import http from \"./httpService\";\n\nrequire(\"dotenv\").config(); // DATA\n\n\nconst BASE_URL = process.env.NODE_ENV === \"development\" ? \"http://localhost:3000/api\" : \"/api\";\nexport function getJewels() {\n  return http.get(`${BASE_URL}/jewels/`).then(res => {\n    return res.data;\n  });\n}\nexport function getJewel(id) {\n  return http.put(`${BASE_URL}/jewels/jewel`, {\n    id: id\n  }).then(res => {\n    return res.data;\n  });\n}\nexport function getUserJewels(userId) {\n  return http.post(`${BASE_URL}/users/jewels`, {\n    userId\n  });\n}\nexport function getSimilarJewels(type) {\n  return http.post(`${BASE_URL}/jewels/similar`, {\n    type: type\n  }).then(res => {\n    return res.data;\n  });\n}\nexport function getStones() {\n  return http.get(`${BASE_URL}/stones/`).then(res => {\n    return res.data;\n  });\n}\nexport function getMetals() {\n  return http.get(`${BASE_URL}/metals/`).then(res => {\n    return res.data;\n  });\n}\nexport function getPieces() {\n  return http.get(`${BASE_URL}/pieces/`).then(res => {\n    return res.data;\n  });\n}\nexport function postJewels(newJewel, userToken) {\n  return http.post(`${BASE_URL}/jewels/add`, newJewel, {\n    headers: {\n      \"x-auth-token\": userToken,\n      action: \"/multiple-upload\",\n      enctype: \"multipart/form-data\",\n      \"Content-type\": \"application/json\"\n    }\n  }).then(res => {\n    return res.data;\n  });\n}\nexport async function editJewel(updatedJewel, jewelId, userToken) {\n  return await http.post(`${BASE_URL}/jewels/update/${jewelId}`, updatedJewel, {\n    headers: {\n      \"x-auth-token\": userToken,\n      action: \"/multiple-upload\",\n      enctype: \"multipart/form-data\",\n      \"Content-type\": \"application/json\"\n    }\n  }).then(async res => {\n    return await res.data;\n  });\n}\nexport function deleteJewel(jewelId, userToken) {\n  return http.delete(`${BASE_URL}/jewels/delete/${jewelId}`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  }).then(res => {\n    return res.data;\n  });\n} // USER\n\nexport function registerUser(user) {\n  return http.post(`${BASE_URL}/users/`, user).then(res => {\n    return res;\n  });\n}\nexport function loginUser(email, password) {\n  return http.post(`${BASE_URL}/auth/`, {\n    email,\n    password\n  });\n}\nexport function forgotPassword(email) {\n  return http.post(`${BASE_URL}/password-reset`, {\n    email\n  }).then(res => {\n    return res.data;\n  });\n}\nexport function changePassword(userId, userToken, password) {\n  return http.post(`${BASE_URL}/password-reset/${userId}/${userToken}`, {\n    password\n  }).then(res => {\n    return res;\n  });\n}\nexport function addUserFavProduct(userId, jewelId) {\n  http.get(`${BASE_URL}/users/add/${userId}/${jewelId}`).then(res => {\n    return res.data;\n  });\n}\nexport function removeUserFavProduct(userId, jewelId) {\n  http.get(`${BASE_URL}/users/remove/${userId}/${jewelId}`).then(res => {\n    return res.data;\n  });\n}\nexport function getUserFavorites(userId) {\n  return http.get(`${BASE_URL}/users/${userId}`).then(res => {\n    return res.data;\n  });\n}","map":{"version":3,"sources":["/home/e_tabidze/Documents/Project-Ge/project-ge-ui/src/Services/ApiEndpoints.js"],"names":["http","require","config","BASE_URL","process","env","NODE_ENV","getJewels","get","then","res","data","getJewel","id","put","getUserJewels","userId","post","getSimilarJewels","type","getStones","getMetals","getPieces","postJewels","newJewel","userToken","headers","action","enctype","editJewel","updatedJewel","jewelId","deleteJewel","delete","registerUser","user","loginUser","email","password","forgotPassword","changePassword","addUserFavProduct","removeUserFavProduct","getUserFavorites"],"mappings":"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","sourcesContent":["import http from \"./httpService\";\nrequire(\"dotenv\").config();\n// DATA\n\nconst BASE_URL = process.env.NODE_ENV === \"development\" ? \"http://localhost:3000/api\" : \"/api\";\nexport function getJewels() {\n  return http.get(`${BASE_URL}/jewels/`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function getJewel(id) {\n  return http.put(`${BASE_URL}/jewels/jewel`, { id: id }).then((res) => {\n    return res.data;\n  });\n}\n\nexport function getUserJewels(userId) {\n  return http.post(`${BASE_URL}/users/jewels`, { userId });\n}\n\nexport function getSimilarJewels(type) {\n  return http.post(`${BASE_URL}/jewels/similar`, { type: type }).then((res) => {\n    return res.data;\n  });\n}\n\nexport function getStones() {\n  return http.get(`${BASE_URL}/stones/`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function getMetals() {\n  return http.get(`${BASE_URL}/metals/`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function getPieces() {\n  return http.get(`${BASE_URL}/pieces/`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function postJewels(newJewel, userToken) {\n  return http\n    .post(`${BASE_URL}/jewels/add`, newJewel, {\n      headers: {\n        \"x-auth-token\": userToken,\n        action: \"/multiple-upload\",\n        enctype: \"multipart/form-data\",\n        \"Content-type\": \"application/json\",\n      },\n    })\n    .then((res) => {\n      return res.data;\n    });\n}\n\nexport async function editJewel(updatedJewel, jewelId, userToken) {\n  return await http\n    .post(`${BASE_URL}/jewels/update/${jewelId}`, updatedJewel, {\n      headers: {\n        \"x-auth-token\": userToken,\n        action: \"/multiple-upload\",\n        enctype: \"multipart/form-data\",\n        \"Content-type\": \"application/json\",\n      },\n    })\n    .then(async (res) => {\n      return await res.data;\n    });\n}\n\nexport function deleteJewel(jewelId, userToken) {\n  return http\n    .delete(`${BASE_URL}/jewels/delete/${jewelId}`, {\n      headers: {\n        \"x-auth-token\": userToken,\n      },\n    })\n    .then((res) => {\n      return res.data;\n    });\n}\n\n// USER\n\nexport function registerUser(user) {\n  return http.post(`${BASE_URL}/users/`, user).then((res) => {\n    return res;\n  });\n}\n\nexport function loginUser(email, password) {\n  return http.post(`${BASE_URL}/auth/`, { email, password });\n}\n\nexport function forgotPassword(email) {\n  return http.post(`${BASE_URL}/password-reset`, { email }).then((res) => {\n    return res.data;\n  });\n}\n\nexport function changePassword(userId, userToken, password) {\n  return http\n    .post(`${BASE_URL}/password-reset/${userId}/${userToken}`, {\n      password,\n    })\n    .then((res) => {\n      return res;\n    });\n}\n\nexport function addUserFavProduct(userId, jewelId) {\n  http.get(`${BASE_URL}/users/add/${userId}/${jewelId}`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function removeUserFavProduct(userId, jewelId) {\n  http.get(`${BASE_URL}/users/remove/${userId}/${jewelId}`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function getUserFavorites(userId) {\n  return http.get(`${BASE_URL}/users/${userId}`).then((res) => {\n    return res.data;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}